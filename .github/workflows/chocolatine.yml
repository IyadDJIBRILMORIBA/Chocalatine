name: Chocolatine

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**'

env:
  MIRROR_URL: "git@github.com:EpitechPromo2028/B-DOP-200-COT-2-2-chocolatine-iyad.djibril-moriba.git"
  EXECUTABLES: "mysh,directory1/executableA,directory2/executableB"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run coding style check
        run: check.sh $(pwd) $(pwd)
      - name: Display coding style report
        run: |
          CODING_STYLE_ERRORS=$(pwd)/coding-style-reports.log
          while IFS= read -r line; do
            array=($(echo "$line" | sed 's/:/\n/g'))
            echo "::error file=${array[1]#./},title=${array[3]#./} coding style errors detected: ${array[2]#./}::${array[4]#./}"
          done < "$CODING_STYLE_ERRORS"
          if [[ -s "$CODING_STYLE_ERRORS" ]]; then
            exit 1
          else
            echo "No coding style errors detected"
          fi

  check_program_compilation:
    needs: [check_coding_style]
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Test compilation
        run: make
      - name: Test executables
        run: |
          OIFS=$IFS
          IFS=','
          for x in $EXECUTABLES; do
            ./$x $ARGUMENTS
          done
          IFS=$OIFS

  run_tests:
    needs: [check_program_compilation]
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run unit tests
        run
